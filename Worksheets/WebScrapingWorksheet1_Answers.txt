
1. B
2. A
3. A
4. B
5. B
6. C
7. A
8. C
9. D
10. A,B

11.
Web scraping :
1.It is a technique used to extract a large amount of data from websites and then saving it to the local machine in the form of XML, excel etc.
2.It need not visit all the pages of website for infomation.
3.A Web Scraper doesn’t obey robots.txt in most of the cases.
4.It needs crawl agent and a parser for parsing the response.
Examples :ProWebScraper, Web Scraper.io


Web Crawling :
1.It basically visits a website and read web pages for the purpose of building entries for search engine index. 
2.It visits each and every page, until the last line for information.
3.It always obeys robots.txt.
4.It only needs only crawl agent.
Examples : Google, Yahoo or Bing do Web Crawling

12. A robots.txt file is a set of instructions for bots. This file is included in the source files of most websites. 
Robots.txt files are mostly intended for managing the activities of bots like web crawlers.

13. Static webpage :
Static web pages content remains the same on every request until the user/ programmer changes it manually. No communication with the database or any other web pages happens in the case of static web pages. 
Simple information about the company’s profile, terms, and conditions page, where content remains the same on every request comes under a static web page. 

Dynamic webpage :
As the name indicates, dynamic web pages are the one that keeps on changing and not remains the same on every request. 
Content of dynamic web pages varies on various parameters like user performing actions, time and the type of request. 
In case of a dynamic web page, when the web browser (client) sends a request to the web server, web server calls the certain program written by the programmer which can perform actions like performing some actions in database, performing transaction procedure, calling other web servers, calling APIs, etc.

--------------------------------------------------------------------------
14.	Write a python program to check whether a webpage contains a title or not.
from selenium import webdriver

DRIVER_PATH = 'E:\\Softwares\\chromedriver.exe'

driver = webdriver.Chrome(executable_path = DRIVER_PATH)

driver.get("https://www.google.co.in/")

try:
    assert 'Google' in driver.title
    print("Google webpage contains title : ",driver.title)
    
except Exception as e:
    print("Title is not present",format(e))
    
driver.close()

--------------------------------------------
15.	Write a python program to access the search bar and search button on images.google.com.
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

DRIVER_PATH = 'E:\\Softwares\\chromedriver.exe'

driver = webdriver.Chrome(executable_path = DRIVER_PATH)

driver.get("https://images.google.com/")

search=driver.find_element_by_xpath("//input[@name='q']")
search.send_keys("Flowers")
#search button not present on images.google.com page
search.send_keys(Keys.RETURN)

driver.close()